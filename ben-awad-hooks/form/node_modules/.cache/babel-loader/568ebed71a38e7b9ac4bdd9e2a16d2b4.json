{"ast":null,"code":"import { useState } from 'react';\n\nconst useForm = initialValues => {\n  // On passe initialValues en tant que props p/ que le useState est une valeur initial\n  const [values, setValues] = useState(initialValues); // on retourne un tablues qui contient la value, ainsi que la méthode setValue qui va prendre un object, qui reprend la valeur initial\n\n  return [values, e => setValues({ ...values,\n    ...values\n  })];\n};\n\nexport default useForm;","map":{"version":3,"sources":["/home/user/Bureau/ben-awad-hooks/form/src/useForm.jsx"],"names":["useState","useForm","initialValues","values","setValues","e"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,OAAO,GAAGC,aAAa,IAAI;AAC7B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,aAAD,CAApC,CAF6B,CAG7B;;AACA,SAAO,CAACC,MAAD,EAASE,CAAC,IAAID,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAY,OAAGA;AAAf,GAAD,CAAvB,CAAP;AACH,CALD;;AAOA,eAAeF,OAAf","sourcesContent":["import {useState} from 'react';\n\nconst useForm = initialValues => {\n    // On passe initialValues en tant que props p/ que le useState est une valeur initial\n    const [values, setValues] = useState(initialValues);\n    // on retourne un tablues qui contient la value, ainsi que la méthode setValue qui va prendre un object, qui reprend la valeur initial\n    return [values, e => setValues({...values, ...values})];\n};\n\nexport default useForm\n"]},"metadata":{},"sourceType":"module"}