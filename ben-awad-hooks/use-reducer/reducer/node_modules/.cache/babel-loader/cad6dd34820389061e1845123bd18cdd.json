{"ast":null,"code":"var _jsxFileName = \"/home/user/Bureau/react-ben/ben-awad-hooks/use-reducer/reducer/src/App.js\";\nimport React, { useReducer, useState } from 'react';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'add-todo':\n      return {\n        todos: [...state.todos, {\n          text: action.text,\n          completed: false\n        }],\n        todoCount: state.todoCount + 1\n      };\n\n    case 'toggle-todo':\n      return {\n        todos: state.todos.map((t, idx) => idx === action.idx ? { ...t,\n          completed: !t.completed\n        } : t),\n        todo\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [{\n    todos\n  }, dispatch] = useReducer(reducer, {\n    todos: [],\n    todoCount: 0\n  });\n  const [text, setText] = useState();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      dispatch({\n        type: 'add-todo',\n        text\n      });\n      setText(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: text,\n    onChange: e => setText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })), todos.map((t, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textDecoration: t.completed ? \"line-through\" : \"\"\n    },\n    onClick: () => dispatch({\n      type: 'toggle-todo',\n      idx\n    }),\n    key: t.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 30\n    }\n  }, t.text)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-reducer/reducer/src/App.js"],"names":["React","useReducer","useState","reducer","state","action","type","todos","text","completed","todoCount","map","t","idx","todo","App","dispatch","setText","e","preventDefault","target","value","textDecoration"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,UAAL;AACE,aAAO;AAAEC,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiB;AAACC,UAAAA,IAAI,EAAEH,MAAM,CAACG,IAAd;AAAoBC,UAAAA,SAAS,EAAE;AAA/B,SAAjB,CAAT;AAAkEC,QAAAA,SAAS,EAAEN,KAAK,CAACM,SAAN,GAAkB;AAA/F,OAAP;;AAEF,SAAK,aAAL;AACE,aAAO;AAAEH,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYI,GAAZ,CAAgB,CAACC,CAAD,EAAIC,GAAJ,KAAYA,GAAG,KAAKR,MAAM,CAACQ,GAAf,GAAqB,EAAC,GAAGD,CAAJ;AAAOH,UAAAA,SAAS,EAAE,CAACG,CAAC,CAACH;AAArB,SAArB,GAAuDG,CAAnF,CAAT;AAAgGE,QAAAA;AAAhG,OAAP;;AAEF;AACE,aAAOV,KAAP;AARJ;AAUD,CAXD;;AAaA,MAAMW,GAAG,GAAG,MAAM;AAEhB,QAAM,CAAC;AAACR,IAAAA;AAAD,GAAD,EAAUS,QAAV,IAAsBf,UAAU,CAACE,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE,EAAT;AAAaG,IAAAA,SAAS,EAAG;AAAzB,GAAV,CAAtC;AACA,QAAM,CAACF,IAAD,EAAOS,OAAP,IAAkBf,QAAQ,EAAhC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,QAAQ,EAAEgB,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACAH,MAAAA,QAAQ,CAAC;AAACV,QAAAA,IAAI,EAAE,UAAP;AAAmBE,QAAAA;AAAnB,OAAD,CAAR;AACAS,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAO,IAAA,KAAK,EAAET,IAAd;AAAoB,IAAA,QAAQ,EAAEU,CAAC,IAAID,OAAO,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADA,EAQGd,KAAK,CAACI,GAAN,CAAU,CAACC,CAAD,EAAIC,GAAJ,kBAAY;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,cAAc,EAAGV,CAAC,CAACH,SAAF,GAAc,cAAd,GAA8B;AAAjD,KAAZ;AAAkE,IAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAACV,MAAAA,IAAI,EAAE,aAAP;AAAsBO,MAAAA;AAAtB,KAAD,CAAzF;AAAuH,IAAA,GAAG,EAAED,CAAC,CAACJ,IAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqII,CAAC,CAACJ,IAAvI,CAAtB,CARH,CADF;AAYD,CAjBD;;AAmBA,eAAeO,GAAf","sourcesContent":["import React, { useReducer, useState } from 'react';\n\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'add-todo':\n      return { todos: [...state.todos, {text: action.text, completed: false}], todoCount: state.todoCount + 1}\n\n    case 'toggle-todo':\n      return { todos: state.todos.map((t, idx) => idx === action.idx ? {...t, completed: !t.completed} : t), todo};\n  \n    default:\n      return state;\n  }\n}\n\nconst App = () => {\n\n  const [{todos}, dispatch] = useReducer(reducer, { todos: [], todoCount : 0});\n  const [text, setText] = useState();\n\n  return(\n    <div>\n    <form onSubmit={e => {\n      e.preventDefault();\n      dispatch({type: 'add-todo', text})\n      setText(\"\")\n    }}>\n      <input value={text} onChange={e => setText(e.target.value)}/>\n    </form>\n      {todos.map((t, idx) => <div style={{ textDecoration : t.completed ? \"line-through\": \"\"}} onClick={() => dispatch({type: 'toggle-todo', idx})} key={t.text}>{t.text}</div>)}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}