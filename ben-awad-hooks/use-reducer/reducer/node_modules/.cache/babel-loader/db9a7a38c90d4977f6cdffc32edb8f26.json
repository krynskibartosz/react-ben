{"ast":null,"code":"var _jsxFileName = \"/home/user/Bureau/react-ben/ben-awad-hooks/use-reducer/reducer/src/App.js\";\nimport React, { useReducer, useState } from 'react';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'add-todo':\n      return {\n        todos: [...state.todos, {\n          text: action.text,\n          completed: false\n        }]\n      };\n\n    case 'add-todo':\n      return {\n        todos: [...state.todos, {\n          text: action.text,\n          completed: false\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [{\n    todos\n  }, dispatch] = useReducer(reducer, {\n    todos: []\n  });\n  const [text, setText] = useState();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      dispatch({\n        type: 'add-todo',\n        text\n      });\n      setText(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: text,\n    onChange: e => setText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  })), todos.map((t, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => dispatch({\n      type: 'toggle-todo',\n      idx\n    }),\n    key: t.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 30\n    }\n  }, t.text)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-reducer/reducer/src/App.js"],"names":["React","useReducer","useState","reducer","state","action","type","todos","text","completed","App","dispatch","setText","e","preventDefault","target","value","map","t","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,UAAL;AACE,aAAO;AAAEC,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiB;AAACC,UAAAA,IAAI,EAAEH,MAAM,CAACG,IAAd;AAAoBC,UAAAA,SAAS,EAAE;AAA/B,SAAjB;AAAT,OAAP;;AACA,SAAK,UAAL;AACE,aAAO;AAAEF,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiB;AAACC,UAAAA,IAAI,EAAEH,MAAM,CAACG,IAAd;AAAoBC,UAAAA,SAAS,EAAE;AAA/B,SAAjB;AAAT,OAAP;;AAEJ;AACE,aAAOL,KAAP;AAPJ;AASD,CAVD;;AAYA,MAAMM,GAAG,GAAG,MAAM;AAEhB,QAAM,CAAC;AAACH,IAAAA;AAAD,GAAD,EAAUI,QAAV,IAAsBV,UAAU,CAACE,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAV,CAAtC;AACA,QAAM,CAACC,IAAD,EAAOI,OAAP,IAAkBV,QAAQ,EAAhC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,QAAQ,EAAEW,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACAH,MAAAA,QAAQ,CAAC;AAACL,QAAAA,IAAI,EAAE,UAAP;AAAmBE,QAAAA;AAAnB,OAAD,CAAR;AACAI,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAO,IAAA,KAAK,EAAEJ,IAAd;AAAoB,IAAA,QAAQ,EAAEK,CAAC,IAAID,OAAO,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADA,EAQGT,KAAK,CAACU,GAAN,CAAU,CAACC,CAAD,EAAIC,GAAJ,kBAAY;AAAK,IAAA,OAAO,EAAE,MAAMR,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAAE,aAAP;AAAsBa,MAAAA;AAAtB,KAAD,CAA5B;AAA0D,IAAA,GAAG,EAAED,CAAC,CAACV,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwEU,CAAC,CAACV,IAA1E,CAAtB,CARH,CADF;AAYD,CAjBD;;AAmBA,eAAeE,GAAf","sourcesContent":["import React, { useReducer, useState } from 'react';\n\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'add-todo':\n      return { todos: [...state.todos, {text: action.text, completed: false}]}\n      case 'add-todo':\n        return { todos: [...state.todos, {text: action.text, completed: false}]}\n  \n    default:\n      return state;\n  }\n}\n\nconst App = () => {\n\n  const [{todos}, dispatch] = useReducer(reducer, { todos: [] });\n  const [text, setText] = useState();\n\n  return(\n    <div>\n    <form onSubmit={e => {\n      e.preventDefault();\n      dispatch({type: 'add-todo', text})\n      setText(\"\")\n    }}>\n      <input value={text} onChange={e => setText(e.target.value)}/>\n    </form>\n      {todos.map((t, idx) => <div onClick={() => dispatch({type: 'toggle-todo', idx})} key={t.text}>{t.text}</div>)}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}