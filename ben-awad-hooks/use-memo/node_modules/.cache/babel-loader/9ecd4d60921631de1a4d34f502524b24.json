{"ast":null,"code":"var _jsxFileName = \"/home/user/Bureau/react-ben/ben-awad-hooks/use-memo/src/App.js\";\nimport React, { useState, useMemo } from 'react';\nimport { useFetch } from './useFetch';\n\nconst computeLongestWord = arr => {\n  if (!arr) {\n    return [];\n  }\n\n  console.log(\"computing word\");\n  let longestWord = \"\";\n  JSON.parse(arr).forEach(sentence => sentence.split(\" \").forEach(word => {\n    if (word.length > longestWord.length) {\n      longestWord = word;\n    }\n  }));\n  return longestWord;\n};\n\nconst App = () => {\n  const longestWord = useMemo(() => computeLongestWord(data), [data, computeLongestWord]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"count: \", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"incr\\xE9ment\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, longestWord));\n};\n\nconst [count, setCount] = useState(0);\nconst {\n  data\n} = useFetch('https://raw.githubusercontent.com/ajzbc/kanye.rest/quotes/quotes.json');\nexport default App;","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-memo/src/App.js"],"names":["React","useState","useMemo","useFetch","computeLongestWord","arr","console","log","longestWord","JSON","parse","forEach","sentence","split","word","length","App","data","count","setCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,YAAzB;;AACA,MAAMC,kBAAkB,GAAIC,GAAD,IAAS;AAChC,MAAI,CAACA,GAAL,EAAU;AACV,WAAO,EAAP;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,MAAIC,WAAW,GAAG,EAAlB;AAEAC,EAAAA,IAAI,CAACC,KAAL,CAAWL,GAAX,EAAgBM,OAAhB,CAAwBC,QAAQ,IAC5BA,QAAQ,CAACC,KAAT,CAAe,GAAf,EAAoBF,OAApB,CAA4BG,IAAI,IAAI;AAChC,QAAGA,IAAI,CAACC,MAAL,GAAcP,WAAW,CAACO,MAA7B,EAAqC;AACjCP,MAAAA,WAAW,GAAGM,IAAd;AACH;AACJ,GAJD,CADJ;AAOI,SAAON,WAAP;AACH,CAhBD;;AAiBA,MAAMQ,GAAG,GAAG,MAAM;AAEd,QAAMR,WAAW,GAAGN,OAAO,CAAC,MAAME,kBAAkB,CAACa,IAAD,CAAzB,EAAiC,CAACA,IAAD,EAAOb,kBAAP,CAAjC,CAA3B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAac,KAAb,CADJ,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMV,WAAN,CAHJ,CADJ;AAOC,CAVL;;AAWI,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAM;AAAEgB,EAAAA;AAAF,IAAWd,QAAQ,CAAC,uEAAD,CAAzB;AAGJ,eAAea,GAAf","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { useFetch } from './useFetch'\nconst computeLongestWord = (arr) => {\n    if (!arr) {\n    return [];\n}\nconsole.log(\"computing word\");\n\nlet longestWord = \"\";\n\nJSON.parse(arr).forEach(sentence =>\n    sentence.split(\" \").forEach(word => {\n        if(word.length > longestWord.length) {\n            longestWord = word;\n        }\n    })\n);\n    return longestWord;\n}\nconst App = () => {\n    \n    const longestWord = useMemo(() => computeLongestWord(data), [data, computeLongestWord])\n    return (\n        <div>\n            <div>count: {count}</div>\n            <button onClick={() => setCount(count + 1)}>incr√©ment</button>\n            <div>{longestWord}</div>\n        </div>\n    )\n    }\n    const [count, setCount] = useState(0);\n    const { data } = useFetch('https://raw.githubusercontent.com/ajzbc/kanye.rest/quotes/quotes.json')\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}