{"ast":null,"code":"var _jsxFileName = \"/home/user/Bureau/react-ben/ben-awad-hooks/use-memo/src/App.js\";\nimport React, { useState, useMemo } from 'react';\nimport { useFetch } from './useFetch';\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const {\n    data\n  } = useFetch('https://raw.githubusercontent.com/ajzbc/kanye.rest/quotes/quotes.json');\n\n  const computeLongestWord = arr => {\n    if (!arr) {\n      return [];\n    }\n\n    console.log(\"computing word\");\n    let longestWord = \"\";\n    JSON.parse(arr).forEach(sentence => sentence.split(\" \").forEach(word => {\n      if (word.length > longestWord.length) {\n        longestWord = word;\n      }\n    }));\n    return longestWord;\n  };\n\n  const longestWord = useMemo(() => com);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"count: \", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"incr\\xE9ment\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, computeLongestWord(data)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-memo/src/App.js"],"names":["React","useState","useMemo","useFetch","App","count","setCount","data","computeLongestWord","arr","console","log","longestWord","JSON","parse","forEach","sentence","split","word","length","com"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAWJ,QAAQ,CAAC,uEAAD,CAAzB;;AAEA,QAAMK,kBAAkB,GAAIC,GAAD,IAAS;AAChC,QAAI,CAACA,GAAL,EAAU;AACN,aAAO,EAAP;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,QAAIC,WAAW,GAAG,EAAlB;AAEAC,IAAAA,IAAI,CAACC,KAAL,CAAWL,GAAX,EAAgBM,OAAhB,CAAwBC,QAAQ,IAC5BA,QAAQ,CAACC,KAAT,CAAe,GAAf,EAAoBF,OAApB,CAA4BG,IAAI,IAAI;AAChC,UAAGA,IAAI,CAACC,MAAL,GAAcP,WAAW,CAACO,MAA7B,EAAqC;AACjCP,QAAAA,WAAW,GAAGM,IAAd;AACH;AACJ,KAJD,CADJ;AAOI,WAAON,WAAP;AACP,GAhBD;;AAkBA,QAAMA,WAAW,GAAGV,OAAO,CAAC,MAAMkB,GAAP,CAA3B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaf,KAAb,CADJ,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMG,kBAAkB,CAACD,IAAD,CAAxB,CAHJ,CADJ;AAOH,CA9BD;;AAgCA,eAAeH,GAAf","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { useFetch } from './useFetch'\n\nconst App = () => {\n    const [count, setCount] = useState(0);\n    const { data } = useFetch('https://raw.githubusercontent.com/ajzbc/kanye.rest/quotes/quotes.json')\n\n    const computeLongestWord = (arr) => {\n        if (!arr) {\n            return [];\n        }\n        console.log(\"computing word\");\n        \n        let longestWord = \"\";\n\n        JSON.parse(arr).forEach(sentence =>\n            sentence.split(\" \").forEach(word => {\n                if(word.length > longestWord.length) {\n                    longestWord = word;\n                }\n            })\n        );\n            return longestWord;\n    }\n\n    const longestWord = useMemo(() => com)\n    return (\n        <div>\n            <div>count: {count}</div>\n            <button onClick={() => setCount(count + 1)}>incr√©ment</button>\n            <div>{computeLongestWord(data)}</div>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}