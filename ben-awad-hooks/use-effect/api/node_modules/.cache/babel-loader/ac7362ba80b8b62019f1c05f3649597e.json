{"ast":null,"code":"var _jsxFileName = \"/home/user/Bureau/react-ben/ben-awad-hooks/use-effect/api/src/App.js\";\nimport React, { useEffect } from 'react';\nimport useForm from \"./useForm\"; // import Hello from \"./Hello\"\n\nconst App = () => {\n  //! On utilise le useForm hook qui vien du composant useForm.jsx\n  // ainsi on peut récuperer toute la logique de la récupération des valeurs des inputs dans un seul hooks\n  const [values, handleChange] = useForm({\n    email: '',\n    password: '',\n    firstName: ''\n  }); // const [showHello, setShowHello] = useState(true);\n\n  useEffect(() => {\n    const onMouseMove = e => {\n      console.log(e);\n    };\n\n    window.addEventListener('mousemove', onMouseMove);\n    return onMouseMouve => {\n      window.removeEventListener(\"mousemove\", onMouseMouve);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    value: values.firstName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-effect/api/src/App.js"],"names":["React","useEffect","useForm","App","values","handleChange","email","password","firstName","onMouseMove","e","console","log","window","addEventListener","onMouseMouve","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAqB,WAArB,C,CACA;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AACA,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBH,OAAO,CAAC;AAACI,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,SAAS,EAAC;AAApC,GAAD,CAAtC,CAHgB,CAIhB;;AACAP,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMQ,WAAW,GAAGC,CAAC,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KAFD;;AAGAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCL,WAArC;AAEE,WAAQM,YAAD,IAAkB;AACvBF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,WAA3B,EAAwCD,YAAxC;AACD,KAFD;AAGD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,uDAGE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAEX,MAAM,CAACE,KAAlC;AAAyC,IAAA,QAAQ,EAAED,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,EAAED,MAAM,CAACI,SAAtC;AAAiD,IAAA,QAAQ,EAAEH,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,KAAK,EAAED,MAAM,CAACG,QAArD;AAA+D,IAAA,QAAQ,EAAEF,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADA,CADF;AAWD,CA3BD;;AA6BA,eAAeF,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport useForm  from \"./useForm\";\n// import Hello from \"./Hello\"\n\n\nconst App = () => {\n  //! On utilise le useForm hook qui vien du composant useForm.jsx\n  // ainsi on peut récuperer toute la logique de la récupération des valeurs des inputs dans un seul hooks\n  const [values, handleChange] = useForm({email: '', password: '', firstName:''});\n  // const [showHello, setShowHello] = useState(true);\n  useEffect(() => {\n  const onMouseMove = e => {\n    console.log(e);\n  };\n  window.addEventListener('mousemove', onMouseMove);\n\n    return (onMouseMouve) => {\n      window.removeEventListener(\"mousemove\", onMouseMouve);\n    };\n  }, []);\n\n  return (\n    <div>\n    <>\n      {/* <button onClick={() => setShowHello(!showHello)}>toggle</button>\n      {showHello && <Hello/>} */}\n      <input name='email' value={values.email} onChange={handleChange}/>\n      <input name='firstName' value={values.firstName} onChange={handleChange}/>\n      <input name='password' type='password' value={values.password} onChange={handleChange}/>\n      </>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}