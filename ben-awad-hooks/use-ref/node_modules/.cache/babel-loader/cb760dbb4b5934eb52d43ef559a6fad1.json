{"ast":null,"code":"var _jsxFileName = \"/home/user/Bureau/react-ben/ben-awad-hooks/use-ref/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useForm from \"./useForm\";\nimport { useFetch } from './useFetch.jsx'; // import Hello from \"./Hello\"\n\nconst App = () => {\n  //! On utilise le useForm hook qui vien du composant useForm.jsx\n  // ainsi on peut récuperer toute la logique de la récupération des valeurs des inputs dans un seul hooks\n  const [values, handleChange] = useForm({\n    email: '',\n    password: '',\n    firstName: ''\n  });\n  const [count, setCount] = useState(() => JSON.parse(localStorage.getItem(\"count\")));\n  const {\n    data,\n    loading\n  } = useFetch(`http://numbersapi.com/${count ? count : 0}/trivia`);\n  const inputRef = useRef();\n  useEffect(() => {\n    localStorage.setItem(\"count\", JSON.stringify(count));\n  }, [count]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, loading ? \"loading...\" : data), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"count : \", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(c => c + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"Incr\\xE9mente\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    value: values.firstName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => inputRef.focus(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Click\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-ref/src/App.js"],"names":["React","useState","useEffect","useRef","useForm","useFetch","App","values","handleChange","email","password","firstName","count","setCount","JSON","parse","localStorage","getItem","data","loading","inputRef","setItem","stringify","c","focus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAqB,WAArB;AACA,SAAQC,QAAR,QAAuB,gBAAvB,C,CACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AACA,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBJ,OAAO,CAAC;AAACK,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,SAAS,EAAC;AAApC,GAAD,CAAtC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,MAAMa,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAP,CAAlC;AACA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBd,QAAQ,CAAE,yBAAwBO,KAAK,GAAGA,KAAH,GAAW,CAAE,SAA5C,CAAhC;AACA,QAAMQ,QAAQ,GAAGjB,MAAM,EAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BP,IAAI,CAACQ,SAAL,CAAeV,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,OAAO,GAAG,YAAH,GAAkBD,IAD5B,CADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYN,KAAZ,CAJA,eAKA;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACU,CAAC,IAAIA,CAAC,GAAG,CAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALA,eAMA,uDACE;AAAO,IAAA,GAAG,EAAEH,QAAZ;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAEb,MAAM,CAACE,KAAjD;AAAwD,IAAA,QAAQ,EAAED,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,EAAED,MAAM,CAACI,SAAtC;AAAiD,IAAA,QAAQ,EAAEH,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,KAAK,EAAED,MAAM,CAACG,QAArD;AAA+D,IAAA,QAAQ,EAAEF,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAMY,QAAQ,CAACI,KAAT,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CANA,CADF;AAeD,CA3BD;;AA6BA,eAAelB,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useForm  from \"./useForm\";\nimport {useFetch} from './useFetch.jsx';\n// import Hello from \"./Hello\"\n\nconst App = () => {\n  //! On utilise le useForm hook qui vien du composant useForm.jsx\n  // ainsi on peut récuperer toute la logique de la récupération des valeurs des inputs dans un seul hooks\n  const [values, handleChange] = useForm({email: '', password: '', firstName:''});\n  const [count, setCount] = useState(() => JSON.parse(localStorage.getItem(\"count\")));\n  const {data, loading} = useFetch(`http://numbersapi.com/${count ? count : 0}/trivia`);\n  const inputRef = useRef();\n\n  useEffect(() => {\n    localStorage.setItem(\"count\", JSON.stringify(count));\n  }, [count]);\n\n  return (\n    <main>\n    <blockquote>\n      {loading ? \"loading...\" : data}\n    </blockquote>\n    <p>count : {count}</p>\n    <button onClick={() => setCount(c => c + 1)}>Incrémente</button>\n    <>\n      <input ref={inputRef} name='email' value={values.email} onChange={handleChange}/>\n      <input name='firstName' value={values.firstName} onChange={handleChange}/>\n      <input name='password' type='password' value={values.password} onChange={handleChange}/>\n      <button onClick={() => inputRef.focus()}>Click</button>\n      </>\n    </main>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}