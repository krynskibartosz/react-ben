{"ast":null,"code":"var _jsxFileName = \"/home/user/Bureau/react-ben/ben-awad-hooks/use-ref/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useForm from \"./useForm\"; // import {useFetch} from './useFetch.jsx';\n\nimport Hello from \"./Hello\";\n\nconst App = () => {\n  //! On utilise le useForm hook qui vien du composant useForm.jsx\n  // ainsi on peut récuperer toute la logique de la récupération des valeurs des inputs dans un seul hooks\n  const [values, handleChange] = useForm({\n    email: '',\n    password: '',\n    firstName: ''\n  });\n  const [count, setCount] = useState(() => JSON.parse(localStorage.getItem(\"count\")));\n  const inputRef = useRef();\n  const [showHello, setShowHello] = useState(true);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"count : \", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(c => c + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Incr\\xE9mente\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowHello(!showHello),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"toggle\"), showHello && /*#__PURE__*/React.createElement(Hello, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    value: values.firstName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => inputRef.current.focus(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Click\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-ref/src/App.js"],"names":["React","useState","useEffect","useRef","useForm","Hello","App","values","handleChange","email","password","firstName","count","setCount","JSON","parse","localStorage","getItem","inputRef","showHello","setShowHello","c","current","focus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AACA,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBJ,OAAO,CAAC;AAACK,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,SAAS,EAAC;AAApC,GAAD,CAAtC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,MAAMa,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAP,CAAlC;AACA,QAAMC,QAAQ,GAAGf,MAAM,EAAvB;AAEA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYW,KAAZ,CAJA,eAKA;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACQ,CAAC,IAAIA,CAAC,GAAG,CAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALA,eAMA,uDACA;AAAQ,IAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,CAACD,SAAF,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECA,SAAS,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,eAGE;AAAO,IAAA,GAAG,EAAED,QAAZ;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAEX,MAAM,CAACE,KAAjD;AAAwD,IAAA,QAAQ,EAAED,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,EAAED,MAAM,CAACI,SAAtC;AAAiD,IAAA,QAAQ,EAAEH,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,KAAK,EAAED,MAAM,CAACG,QAArD;AAA+D,IAAA,QAAQ,EAAEF,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAQ,IAAA,OAAO,EAAE,MAAMU,QAAQ,CAACI,OAAT,CAAiBC,KAAjB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CANA,CADF;AAiBD,CA3BD;;AA6BA,eAAejB,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useForm  from \"./useForm\";\n// import {useFetch} from './useFetch.jsx';\nimport Hello from \"./Hello\"\n\nconst App = () => {\n  //! On utilise le useForm hook qui vien du composant useForm.jsx\n  // ainsi on peut récuperer toute la logique de la récupération des valeurs des inputs dans un seul hooks\n  const [values, handleChange] = useForm({email: '', password: '', firstName:''});\n  const [count, setCount] = useState(() => JSON.parse(localStorage.getItem(\"count\")));\n  const inputRef = useRef();\n\n  const [showHello, setShowHello] = useState(true)\n\n\n  return (\n    <main>\n    <blockquote>\n      {/* {loading ? \"loading...\" : data} */}\n    </blockquote>\n    <p>count : {count}</p>\n    <button onClick={() => setCount(c => c + 1)}>Incrémente</button>\n    <>\n    <button onClick={() => setShowHello(!showHello)}>toggle</button>\n    {showHello && <Hello/>}\n      <input ref={inputRef} name='email' value={values.email} onChange={handleChange}/>\n      <input name='firstName' value={values.firstName} onChange={handleChange}/>\n      <input name='password' type='password' value={values.password} onChange={handleChange}/>\n      <button onClick={() => inputRef.current.focus()}>Click</button>\n      </>\n    </main>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}