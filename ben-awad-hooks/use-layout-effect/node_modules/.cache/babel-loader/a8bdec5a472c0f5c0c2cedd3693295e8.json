{"ast":null,"code":"import { useEffect, useState, useRef } from \"react\";\nexport const useFetch = url => {\n  const isCurrent = useRef(true);\n  const [state, setState] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(() => {\n    return () => {\n      // ! call when the component is going to unmount\n      isCurrent.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    setState(state => ({\n      data: state.data,\n      loading: true\n    })); //? Ici ont est obliger d'utiliser une IIFE(Immediately Invoked Function Expression)\n    //! C/ nous somme dans un useEffect Hooks.\n\n    (async () => {\n      let res = await fetch(url);\n      let value = await res.text();\n      setTimeout(() => {\n        isCurrent.current && setState({\n          data: value,\n          loading: false\n        });\n      }, 1000);\n    })();\n  }, [url, setState]);\n  return state;\n};","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-layout-effect/src/useFetch.jsx"],"names":["useEffect","useState","useRef","useFetch","url","isCurrent","state","setState","data","loading","current","res","fetch","value","text","setTimeout"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,QAAQ,GAAGC,GAAG,IAAI;AAC3B,QAAMC,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAD,CAAlC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACT;AACAK,MAAAA,SAAS,CAACK,OAAV,GAAoB,KAApB;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACD,KAAK,KAAK;AAACE,MAAAA,IAAI,EAAGF,KAAK,CAACE,IAAd;AAAoBC,MAAAA,OAAO,EAAE;AAA7B,KAAL,CAAN,CAAR,CADY,CAEZ;AACA;;AACA,KAAC,YAAY;AACT,UAAIE,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAD,CAArB;AACA,UAAIS,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAlB;AACAC,MAAAA,UAAU,CAAC,MAAM;AACTV,QAAAA,SAAS,CAACK,OAAV,IAAqBH,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEK,KAAR;AAAeJ,UAAAA,OAAO,EAAE;AAAxB,SAAD,CAA7B;AACP,OAFS,EAEP,IAFO,CAAV;AAGH,KAND;AAOC,GAXI,EAWF,CAACL,GAAD,EAAMG,QAAN,CAXE,CAAT;AAYA,SAAOD,KAAP;AACH,CAxBM","sourcesContent":["import {useEffect, useState, useRef } from \"react\";\n\t\nexport const useFetch = url => {\n    const isCurrent = useRef(true);\n    const [state, setState] = useState({ data: null, loading: true});\n\n    useEffect(() => {\n        return () => {\n            // ! call when the component is going to unmount\n            isCurrent.current = false\n        }\n    }, [])\n\n    useEffect(() => {\n        setState(state => ({data : state.data, loading: true}));\n        //? Ici ont est obliger d'utiliser une IIFE(Immediately Invoked Function Expression)\n        //! C/ nous somme dans un useEffect Hooks.\n        (async () => {\n            let res = await fetch(url);\n            let value = await res.text();\n            setTimeout(() => {\n                    isCurrent.current && setState({ data: value, loading: false });                \n            }, 1000);\n        })();\n        }, [url, setState]);\n    return state;\n}"]},"metadata":{},"sourceType":"module"}