{"ast":null,"code":"var _jsxFileName = \"/home/user/Bureau/react-ben/ben-awad-hooks/use-layout-effect/src/Hello.jsx\";\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport { useFetch } from './useFetch';\nimport { useMeasure } from './useMeasure';\n\nconst Hello = () => {\n  const [count, setCount] = useState(() => JSON.parse(localStorage.getItem(\"count\")));\n  const {\n    data,\n    loading\n  } = useFetch(`http://numbersapi.com/${count ? count : 0}/trivia`);\n  useEffect(() => {\n    localStorage.setItem(\"count\", JSON.stringify(count));\n  }, [count]);\n  const divRef = useRef();\n  const rect = useMeasure(divRef, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex;'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"blockquote\", {\n    ref: divRef,\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, loading ? \"loading...\" : data), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, JSON.stringify(rect, null, 2)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"count : \", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(c => c + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"Incr\\xE9mente\"));\n};\n\nexport default Hello;","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-layout-effect/src/Hello.jsx"],"names":["React","useState","useEffect","useLayoutEffect","useRef","useFetch","useMeasure","Hello","count","setCount","JSON","parse","localStorage","getItem","data","loading","setItem","stringify","divRef","rect","display","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,eAArC,EAAsDC,MAAtD,QAAoE,OAApE;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,MAAMS,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAP,CAAlC;AACA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBV,QAAQ,CAAE,yBAAwBG,KAAK,GAAGA,KAAH,GAAW,CAAE,SAA5C,CAAhC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeT,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,QAAMU,MAAM,GAAEd,MAAM,EAApB;AAEA,QAAMe,IAAI,GAAGb,UAAU,CAACY,MAAD,EAAS,CAACJ,IAAD,CAAT,CAAvB;AAEE,sBAAO;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP;AAAY,IAAA,GAAG,EAAEF,MAAjB;AAAyB,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAE;AAAV,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,GAAG,YAAH,GAAkBD,IAD5B,CADO,eAIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACO,SAAL,CAAeE,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CADH,CAJO,eAOP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYX,KAAZ,CAPO,eAQP;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACY,CAAC,IAAIA,CAAC,GAAG,CAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARO,CAAP;AAUH,CArBD;;AAuBA,eAAed,KAAf","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport { useFetch } from './useFetch'\nimport { useMeasure } from './useMeasure';\n\nconst Hello = () => {\n  const [count, setCount] = useState(() => JSON.parse(localStorage.getItem(\"count\")));\n  const {data, loading} = useFetch(`http://numbersapi.com/${count ? count : 0}/trivia`);\n  useEffect(() => {\n    localStorage.setItem(\"count\", JSON.stringify(count));\n  }, [count]);\n\n  const divRef= useRef();\n\n  const rect = useMeasure(divRef, [data]);\n\n    return <div style={{display: 'flex;'}}>\n    <blockquote ref={divRef} style={{display: \"flex\"}}>\n      {loading ? \"loading...\" : data}\n    </blockquote>\n    <pre>\n      {JSON.stringify(rect, null, 2)}\n    </pre>\n    <p>count : {count}</p>\n    <button onClick={() => setCount(c => c + 1)}>Incr√©mente</button>\n    </div> \n}\n\nexport default Hello"]},"metadata":{},"sourceType":"module"}