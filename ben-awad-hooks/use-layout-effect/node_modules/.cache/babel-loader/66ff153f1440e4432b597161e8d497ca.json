{"ast":null,"code":"var _jsxFileName = \"/home/user/Bureau/react-ben/ben-awad-hooks/use-layout-effect/src/App.js\";\nimport React, { useState, useRef } from 'react';\nimport useForm from \"./useForm\";\nimport useMeasure from './useMeasure'; // import {useFetch} from './useFetch.jsx';\n\nimport Hello from \"./Hello\";\n\nconst App = () => {\n  //! On utilise le useForm hook qui vien du composant useForm.jsx\n  // ainsi on peut récuperer toute la logique de la récupération des valeurs des inputs dans un seul hooks\n  const [values, handleChange] = useForm({\n    email: '',\n    password: '',\n    firstName: ''\n  });\n  const inputRef = useRef();\n  const hello = useRef(() => console.log('hello'));\n  const [showHello, setShowHello] = useState(true);\n  const [rect, inputRef2] = useMeasure([]); // useLayoutEffect(() => {\n  //     // ! \"getBoundingClientRect\" => cette méthode nous donne la dimensions de l'élement\n  //     console.log(inputRef.current.getBoundingClientRect());\n  //   return () => {\n  //   };\n  // }, [])\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowHello(!showHello),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"toggle\"), showHello && /*#__PURE__*/React.createElement(Hello, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef2,\n    name: \"firstName\",\n    value: values.firstName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      inputRef.current.focus();\n      hello.current();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Click\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/user/Bureau/react-ben/ben-awad-hooks/use-layout-effect/src/App.js"],"names":["React","useState","useRef","useForm","useMeasure","Hello","App","values","handleChange","email","password","firstName","inputRef","hello","console","log","showHello","setShowHello","rect","inputRef2","current","focus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AACA,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBL,OAAO,CAAC;AAACM,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,SAAS,EAAC;AAApC,GAAD,CAAtC;AACA,QAAMC,QAAQ,GAAGV,MAAM,EAAvB;AACA,QAAMW,KAAK,GAAGX,MAAM,CAAC,MAAMY,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAP,CAApB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAM,CAACiB,IAAD,EAAOC,SAAP,IAAoBf,UAAU,CAAC,EAAD,CAApC,CARgB,CAUhB;AACA;AACA;AAEA;AAEA;AACA;;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,uDACA;AAAQ,IAAA,OAAO,EAAE,MAAMa,YAAY,CAAC,CAACD,SAAF,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECA,SAAS,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,eAGE;AAAO,IAAA,GAAG,EAAEJ,QAAZ;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAEL,MAAM,CAACE,KAAjD;AAAwD,IAAA,QAAQ,EAAED,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAO,IAAA,GAAG,EAAEW,SAAZ;AAAuB,IAAA,IAAI,EAAC,WAA5B;AAAwC,IAAA,KAAK,EAAEZ,MAAM,CAACI,SAAtD;AAAiE,IAAA,QAAQ,EAAEH,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,KAAK,EAAED,MAAM,CAACG,QAArD;AAA+D,IAAA,QAAQ,EAAEF,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAQ,IAAA,OAAO,EAAE,MACjB;AAACI,MAAAA,QAAQ,CAACQ,OAAT,CAAiBC,KAAjB;AACDR,MAAAA,KAAK,CAACO,OAAN;AAAgB,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADA,CADF;AAeD,CAnCD;;AAqCA,eAAed,GAAf","sourcesContent":["import React, { useState, useRef} from 'react';\nimport useForm  from \"./useForm\";\nimport useMeasure from './useMeasure'\n// import {useFetch} from './useFetch.jsx';\nimport Hello from \"./Hello\"\n\nconst App = () => {\n  //! On utilise le useForm hook qui vien du composant useForm.jsx\n  // ainsi on peut récuperer toute la logique de la récupération des valeurs des inputs dans un seul hooks\n  const [values, handleChange] = useForm({email: '', password: '', firstName:''});\n  const inputRef = useRef();\n  const hello = useRef(() => console.log('hello'));\n  const [showHello, setShowHello] = useState(true)\n\n  const [rect, inputRef2] = useMeasure([]);\n\n  // useLayoutEffect(() => {\n  //     // ! \"getBoundingClientRect\" => cette méthode nous donne la dimensions de l'élement\n  //     console.log(inputRef.current.getBoundingClientRect());\n      \n  //   return () => {\n      \n  //   };\n  // }, [])\n\n\n  return (\n    <main>\n    <>\n    <button onClick={() => setShowHello(!showHello)}>toggle</button>\n    {showHello && <Hello/>}\n      <input ref={inputRef} name='email' value={values.email} onChange={handleChange}/>\n      <input ref={inputRef2} name='firstName' value={values.firstName} onChange={handleChange}/>\n      <input name='password' type='password' value={values.password} onChange={handleChange}/>\n      <button onClick={() => \n      {inputRef.current.focus()\n      hello.current()}\n      }>Click</button>\n      </>\n    </main>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}